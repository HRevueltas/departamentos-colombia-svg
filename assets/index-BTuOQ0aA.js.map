{"version":3,"file":"index-BTuOQ0aA.js","sources":["../../src/config.ts","../../src/utils.ts","../../src/map-renderer.ts","../../src/svg-exporter.ts","../../src/code-viewer.ts","../../src/main.ts"],"sourcesContent":["import type { DepartmentCode, AppState } from './types';\r\n\r\nexport const CONFIG = {\r\n  dataUrl: 'https://raw.githubusercontent.com/caticoa3/colombia_mapa/master/co_2018_MGN_MPIO_POLITICO.geojson',\r\n  mapWidth: 800,\r\n  mapHeight: 600,\r\n  mapMargin: 40,\r\n  departmentCodes: [\r\n    { code: '91', name: 'Amazonas' },\r\n  { code: '05', name: 'Antioquia' },\r\n  { code: '81', name: 'Arauca' },\r\n  { code: '08', name: 'Atlántico' },\r\n  { code: '11', name: 'Bogotá D.C.' },\r\n  { code: '13', name: 'Bolívar' },\r\n  { code: '15', name: 'Boyacá' },\r\n  { code: '17', name: 'Caldas' },\r\n  { code: '18', name: 'Caquetá' },\r\n  { code: '85', name: 'Casanare' },\r\n  { code: '19', name: 'Cauca' },\r\n  { code: '20', name: 'Cesar' },\r\n  { code: '27', name: 'Chocó' },\r\n  { code: '23', name: 'Córdoba' },\r\n  { code: '25', name: 'Cundinamarca' },\r\n  { code: '94', name: 'Guainía' },\r\n  { code: '95', name: 'Guaviare' },\r\n  { code: '41', name: 'Huila' },\r\n  { code: '44', name: 'La Guajira' },\r\n  { code: '47', name: 'Magdalena' },\r\n  { code: '50', name: 'Meta' },\r\n  { code: '52', name: 'Nariño' },\r\n  { code: '54', name: 'Norte de Santander' },\r\n  { code: '86', name: 'Putumayo' },\r\n  { code: '63', name: 'Quindío' },\r\n  { code: '66', name: 'Risaralda' },\r\n  { code: '88', name: 'San Andrés, Providencia y Santa Catalina' },\r\n  { code: '68', name: 'Santander' },\r\n  { code: '70', name: 'Sucre' },\r\n  { code: '73', name: 'Tolima' },\r\n  { code: '76', name: 'Valle del Cauca' },\r\n  { code: '97', name: 'Vaupés' },\r\n  { code: '99', name: 'Vichada' }\r\n  ] as DepartmentCode[],\r\n  colors: {\r\n    fill: '#6f9c76',\r\n    stroke: '#ffffff',\r\n    strokeWidth: '0.5'\r\n  }\r\n};\r\n\r\nexport const STATE: AppState = {\r\n  currentFeatures: [],\r\n  allData: {\r\n    departamentos: null,\r\n    municipios: null\r\n  },\r\n  displayOption: 'map',\r\n  isAllDepartments: false,\r\n  jsonGenerated: {\r\n    departamento: false,\r\n    all: false\r\n  }\r\n};\r\n","export function formatXML(xml: string): string {\r\n  let formatted = '';\r\n  let indent = '';\r\n  const tab = '  ';\r\n  \r\n  xml.split(/>\\s*</).forEach(node => {\r\n    if (node.match(/^\\/\\w/)) {\r\n      indent = indent.substring(tab.length);\r\n    }\r\n    formatted += indent + '<' + node + '>\\r\\n';\r\n    if (node.match(/^<?\\w[^>]*[^\\/]$/) && !node.startsWith('?')) {\r\n      indent += tab;\r\n    }\r\n  });\r\n  \r\n  return formatted.substring(1, formatted.length - 3);\r\n}\r\n\r\nexport function showLoading(show: boolean): void {\r\n  const loadingEl = document.getElementById('loading');\r\n  if (loadingEl) {\r\n    loadingEl.style.display = show ? 'block' : 'none';\r\n  }\r\n}\r\n\r\nexport function escapeSelectorId(id: string): string {\r\n  return id.replace(/[^\\w-]/g, '\\\\$&');\r\n}\r\n\r\nexport function showNotification(message: string, type: 'success' | 'error' = 'success'): void {\r\n  const notification = document.createElement('div');\r\n  notification.className = `notification ${type}`;\r\n  notification.textContent = message;\r\n  notification.style.cssText = `\r\n    position: fixed;\r\n    top: 20px;\r\n    right: 20px;\r\n    padding: 15px 20px;\r\n    background: ${type === 'success' ? '#4caf50' : '#f44336'};\r\n    color: white;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 8px rgba(0,0,0,0.2);\r\n    z-index: 10000;\r\n    animation: slideIn 0.3s ease;\r\n  `;\r\n  \r\n  document.body.appendChild(notification);\r\n  \r\n  setTimeout(() => {\r\n    notification.style.animation = 'slideOut 0.3s ease';\r\n    setTimeout(() => notification.remove(), 300);\r\n  }, 3000);\r\n}\r\n\r\nexport function calculateSVGSize(svgString: string): string {\r\n  const bytes = new Blob([svgString]).size;\r\n  const kb = bytes / 1024;\r\n  return kb < 1 ? `${bytes} bytes` : `${kb.toFixed(2)} KB`;\r\n}\r\n","import * as d3 from 'd3';\r\nimport type { GeoJSONFeature, DisplayOption } from './types';\r\nimport { CONFIG, STATE } from './config';\r\nimport { escapeSelectorId } from './utils';\r\n\r\nexport class MapRenderer {\r\n  private svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\r\n  private projection: d3.GeoProjection;\r\n  private path: d3.GeoPath;\r\n  private zoom: d3.ZoomBehavior<SVGSVGElement, unknown>;\r\n  private g: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null = null;\r\n\r\n  constructor(containerId: string) {\r\n    this.svg = d3.select(`#${containerId}`)\r\n      .append('svg')\r\n      .attr('id', 'mapa-svg')\r\n      .attr('viewBox', `0 0 ${CONFIG.mapWidth} ${CONFIG.mapHeight}`)\r\n      .attr('preserveAspectRatio', 'xMidYMid meet')\r\n      // .style('width', '100%')\r\n      // .style('height', '100%')\r\n      // .style('max-width', '100%')\r\n      // .style('max-height', '100%');\r\n\r\n    this.projection = d3.geoMercator();\r\n    this.path = d3.geoPath().projection(this.projection);\r\n    \r\n    this.zoom = d3.zoom<SVGSVGElement, unknown>()\r\n      .scaleExtent([0.5, 8])\r\n      .on('zoom', (event) => {\r\n        if (this.g) {\r\n          this.g.attr('transform', event.transform);\r\n        }\r\n      });\r\n    \r\n    this.svg.call(this.zoom);\r\n  }\r\n\r\n  renderMapa(features: GeoJSONFeature[]): void {\r\n    this.svg.selectAll('*').remove();\r\n    STATE.currentFeatures = features;\r\n\r\n    if (features.length === 0) return;\r\n\r\n    const featureCollection = {\r\n      type: 'FeatureCollection',\r\n      features: features\r\n    };\r\n\r\n    this.projection.fitSize([CONFIG.mapWidth, CONFIG.mapHeight], featureCollection as any);\r\n\r\n  \r\n    this.g = this.svg.append('g').attr('class', 'zoom-group');\r\n    \r\n    // Obtener el ID del departamento del primer feature\r\n    const departmentId = features[0]?.properties?.DPTO_CCDGO || '';\r\n    \r\n    const mapGroup = this.g.append('g')\r\n      .attr('class', 'municipios')\r\n      .attr('data-departamento-id', departmentId);\r\n\r\n    mapGroup.selectAll('path')\r\n      .data(features)\r\n      .enter()\r\n      .append('path')\r\n      .attr('class', 'municipio')\r\n      .attr('data-element-id', (d: any, i: number) => d.properties.MPIO_CCNCT || `municipio-${i}`)\r\n      .attr('name', (d: any) => d.properties.MPIO_CNMBR || '')\r\n      .attr('fill', CONFIG.colors.fill)\r\n      .attr('stroke', CONFIG.colors.stroke)\r\n      .attr('stroke-width', CONFIG.colors.strokeWidth)\r\n      .attr('d', this.path as any);\r\n    \r\n\r\n    this.svg.call(this.zoom.transform, d3.zoomIdentity);\r\n  }\r\n\r\n  renderMunicipios(departmentCode: string): void {\r\n    if (!STATE.allData.municipios) return;\r\n\r\n    const municipios = STATE.allData.municipios.features.filter(\r\n      (f: any) => f.properties.DPTO_CCDGO === departmentCode\r\n    );\r\n\r\n    if (municipios.length === 0) return;\r\n\r\n    this.svg.selectAll('.departamento')\r\n      .attr('stroke-width', '0.3')\r\n      .attr('stroke-opacity', '0.5');\r\n  }\r\n\r\n  renderEtiquetas(features: GeoJSONFeature[]): void {\r\n    if (!this.g) return;\r\n    \r\n    const etiquetasGroup = this.g.append('g').attr('class', 'etiquetas');\r\n\r\n    etiquetasGroup.selectAll('text')\r\n      .data(features)\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'etiqueta')\r\n      .attr('data-element-id', (d: any, i: number) => d.properties.MPIO_CCNCT || `etiqueta-${i}`)\r\n      .attr('name', (d: any) => d.properties.MPIO_CNMBR || '')\r\n      .attr('x', (d: any) => {\r\n        const centroid = this.path.centroid(d);\r\n        return centroid[0];\r\n      })\r\n      .attr('y', (d: any) => {\r\n        const centroid = this.path.centroid(d);\r\n        return centroid[1];\r\n      })\r\n      .attr('text-anchor', 'middle')\r\n      .attr('font-size', '10px')\r\n      .attr('fill', '#333')\r\n      .attr('font-weight', 'bold')\r\n      .text((d: any) => d.properties.MPIO_CNMBR || '');\r\n  }\r\n\r\n  renderPuntos(features: GeoJSONFeature[]): void {\r\n    if (!this.g) return;\r\n    \r\n    const puntosGroup = this.g.append('g').attr('class', 'puntos');\r\n\r\n    puntosGroup.selectAll('circle')\r\n      .data(features)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'punto')\r\n      .attr('data-element-id', (d: any, i: number) => d.properties.MPIO_CCNCT || `punto-${i}`)\r\n      .attr('name', (d: any) => d.properties.MPIO_CNMBR || '')\r\n      .attr('cx', (d: any) => {\r\n        const centroid = this.path.centroid(d);\r\n        return centroid[0];\r\n      })\r\n      .attr('cy', (d: any) => {\r\n        const centroid = this.path.centroid(d);\r\n        return centroid[1];\r\n      })\r\n      .attr('r', 3)\r\n      .attr('fill', '#d32f2f')\r\n      .attr('stroke', CONFIG.colors.stroke)\r\n      .attr('stroke-width', '1');\r\n  }\r\n\r\n  updateDisplayOption(option: DisplayOption): void {\r\n    STATE.displayOption = option;\r\n\r\n    this.svg.selectAll('.etiquetas').remove();\r\n    this.svg.selectAll('.puntos').remove();\r\n\r\n    if (option === 'map+labels') {\r\n      this.renderEtiquetas(STATE.currentFeatures);\r\n    } else if (option === 'map+points') {\r\n      this.renderPuntos(STATE.currentFeatures);\r\n    }\r\n  }\r\n\r\n  highlightElement(elementId: string): void {\r\n    const escapedId = escapeSelectorId(elementId);\r\n    this.svg.select(`[data-id=\"${escapedId}\"]`)\r\n      .attr('stroke', '#ff9800')\r\n      .attr('stroke-width', '2');\r\n  }\r\n\r\n  unhighlightElement(elementId: string): void {\r\n    const escapedId = escapeSelectorId(elementId);\r\n    this.svg.select(`[data-id=\"${escapedId}\"]`)\r\n      .attr('stroke', CONFIG.colors.stroke)\r\n      .attr('stroke-width', CONFIG.colors.strokeWidth);\r\n  }\r\n\r\n  getSVGElement(): SVGSVGElement {\r\n    return this.svg.node() as SVGSVGElement;\r\n  }\r\n\r\n  getMunicipiosJSON(): string {\r\n    const svgElement = this.getSVGElement();\r\n    const municipios: any[] = [];\r\n    \r\n    const municipioElements = svgElement.querySelectorAll('.municipio');\r\n    const departamentoId = svgElement.querySelector('.municipios')?.getAttribute('data-departamento-id') || '';\r\n    \r\n    // Obtener el nombre del departamento desde CONFIG\r\n    const departamentoInfo = CONFIG.departmentCodes.find(d => d.code === departamentoId);\r\n    const departamentoNombre = departamentoInfo?.name || '';\r\n    \r\n    // Obtener viewBox del SVG\r\n    const viewBox = svgElement.getAttribute('viewBox') || '0 0 800 600';\r\n    \r\n    // Obtener estilos comunes del primer municipio\r\n    let commonFill = CONFIG.colors.fill;\r\n    let commonStroke = CONFIG.colors.stroke;\r\n    let commonStrokeWidth = CONFIG.colors.strokeWidth;\r\n    \r\n    if (municipioElements.length > 0) {\r\n      const firstElement = municipioElements[0] as SVGPathElement;\r\n      commonFill = firstElement.getAttribute('fill') || commonFill;\r\n      commonStroke = firstElement.getAttribute('stroke') || commonStroke;\r\n      commonStrokeWidth = firstElement.getAttribute('stroke-width') || String(commonStrokeWidth);\r\n    }\r\n    \r\n    municipioElements.forEach((element) => {\r\n      const pathElement = element as SVGPathElement;\r\n      const id = pathElement.getAttribute('data-element-id') || '';\r\n      const nombre = pathElement.getAttribute('name') || '';\r\n      const d = pathElement.getAttribute('d') || '';\r\n      \r\n      municipios.push({\r\n        id,\r\n        nombre,\r\n        d\r\n      });\r\n    });\r\n    \r\n    const jsonData = {\r\n      metadata: {\r\n        departamento: {\r\n          id: departamentoId,\r\n          nombre: departamentoNombre\r\n        },\r\n        svg: {\r\n          viewBox: viewBox\r\n        },\r\n        styles: {\r\n          fill: commonFill,\r\n          stroke: commonStroke,\r\n          strokeWidth: parseFloat(commonStrokeWidth)\r\n        }\r\n      },\r\n      municipios\r\n    };\r\n    \r\n    return JSON.stringify(jsonData, null, 2);\r\n  }\r\n\r\n  clearMap(): void {\r\n    this.svg.selectAll('*').remove();\r\n    STATE.currentFeatures = [];\r\n  }\r\n  \r\n  zoomIn(): void {\r\n    this.svg.transition().duration(300).call(this.zoom.scaleBy, 1.5);\r\n  }\r\n  \r\n  zoomOut(): void {\r\n    this.svg.transition().duration(300).call(this.zoom.scaleBy, 0.67);\r\n  }\r\n  \r\n  resetZoom(): void {\r\n    this.svg.transition().duration(300).call(this.zoom.transform, d3.zoomIdentity);\r\n  }\r\n}\r\n","import * as d3 from 'd3';\r\nimport JSZip from 'jszip';\r\nimport type { GeoJSONFeature } from './types';\r\nimport { CONFIG, STATE } from './config';\r\nimport { showNotification } from './utils';\r\n\r\nexport class SVGExporter {\r\n  private projection: d3.GeoProjection;\r\n  private path: d3.GeoPath;\r\n\r\n  constructor() {\r\n    this.projection = d3.geoMercator();\r\n    this.path = d3.geoPath().projection(this.projection);\r\n  }\r\n\r\n  prepareSVGForExport(svg: SVGSVGElement, includeLabels: boolean, includePoints: boolean): string {\r\n    const clonedSvg = svg.cloneNode(true) as SVGSVGElement;\r\n\r\n    // Remove labels if not needed\r\n    if (!includeLabels) {\r\n      clonedSvg.querySelectorAll('.etiquetas').forEach(el => el.remove());\r\n    }\r\n\r\n    // Make points invisible in export\r\n    if (includePoints) {\r\n      clonedSvg.querySelectorAll('.punto').forEach(el => {\r\n        (el as SVGElement).style.opacity = '0';\r\n      });\r\n    } else {\r\n      clonedSvg.querySelectorAll('.puntos').forEach(el => el.remove());\r\n    }\r\n\r\n    // Apply inline styles\r\n    this.applyStylesToSVG(clonedSvg);\r\n\r\n    const bounds = clonedSvg.getBBox();\r\n    const viewBox = `${bounds.x} ${bounds.y} ${bounds.width} ${bounds.height}`;\r\n    clonedSvg.setAttribute('viewBox', viewBox);\r\n    clonedSvg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n    clonedSvg.removeAttribute('width');\r\n    clonedSvg.removeAttribute('height');\r\n\r\n    const serializer = new XMLSerializer();\r\n    const svgString = serializer.serializeToString(clonedSvg);\r\n    return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + svgString;\r\n  }\r\n\r\n  private applyStylesToSVG(svg: SVGSVGElement): void {\r\n    svg.querySelectorAll('.departamento').forEach(el => {\r\n      (el as SVGElement).style.fill = CONFIG.colors.fill;\r\n      (el as SVGElement).style.stroke = CONFIG.colors.stroke;\r\n      (el as SVGElement).style.strokeWidth = CONFIG.colors.strokeWidth;\r\n    });\r\n\r\n    svg.querySelectorAll('.municipio').forEach(el => {\r\n      (el as SVGElement).style.fill = 'none';\r\n      (el as SVGElement).style.stroke = CONFIG.colors.stroke;\r\n      (el as SVGElement).style.strokeWidth = '0.3';\r\n      (el as SVGElement).style.opacity = '0.5';\r\n    });\r\n\r\n    svg.querySelectorAll('.etiqueta').forEach(el => {\r\n      (el as SVGElement).style.fontSize = '10px';\r\n      (el as SVGElement).style.fill = '#333';\r\n      (el as SVGElement).style.fontWeight = 'bold';\r\n      (el as SVGElement).style.textAnchor = 'middle';\r\n    });\r\n\r\n    svg.querySelectorAll('.punto').forEach(el => {\r\n      (el as SVGElement).style.fill = '#d32f2f';\r\n      (el as SVGElement).style.stroke = CONFIG.colors.stroke;\r\n      (el as SVGElement).style.strokeWidth = '1';\r\n    });\r\n  }\r\n\r\n  generateSVGForDepartment(departmentCode: string): string {\r\n    if (!STATE.allData.departamentos) return '';\r\n\r\n    const features = STATE.allData.departamentos.features.filter(\r\n      (f: any) => f.properties.DPTO_CCDGO === departmentCode\r\n    );\r\n\r\n    if (features.length === 0) return '';\r\n\r\n    const tempSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    tempSvg.setAttribute('width', String(CONFIG.mapWidth));\r\n    tempSvg.setAttribute('height', String(CONFIG.mapHeight));\r\n\r\n    const featureCollection = {\r\n      type: 'FeatureCollection',\r\n      features: features\r\n    };\r\n\r\n    this.projection.fitSize([CONFIG.mapWidth, CONFIG.mapHeight], featureCollection as any);\r\n\r\n    const mapGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\r\n    mapGroup.setAttribute('class', 'municipios');\r\n\r\n    features.forEach((feature, index) => {\r\n      const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n      path.setAttribute('class', 'municipio');\r\n      const municipioId = (feature.properties as any).MPIO_CCNCT || `municipio-${index}`;\r\n      const municipioName = (feature.properties as any).MPIO_CNMBR || '';\r\n      path.setAttribute('data-element-id', municipioId);\r\n      path.setAttribute('name', municipioName);\r\n      path.setAttribute('d', this.path(feature as any) || '');\r\n      mapGroup.appendChild(path);\r\n    });\r\n\r\n    tempSvg.appendChild(mapGroup);\r\n\r\n    if (STATE.displayOption === 'map+labels') {\r\n      this.addEtiquetasToTempSVG(tempSvg, features);\r\n    } else if (STATE.displayOption === 'map+points') {\r\n      this.addPuntosToTempSVG(tempSvg, features);\r\n    }\r\n\r\n    return this.prepareSVGForExport(tempSvg, STATE.displayOption === 'map+labels', STATE.displayOption === 'map+points');\r\n  }\r\n\r\n  private addEtiquetasToTempSVG(svg: SVGSVGElement, features: GeoJSONFeature[]): void {\r\n    const etiquetasGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\r\n    etiquetasGroup.setAttribute('class', 'etiquetas');\r\n\r\n    features.forEach((feature, index) => {\r\n      const centroid = this.path.centroid(feature as any);\r\n      const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\r\n      text.setAttribute('class', 'etiqueta');\r\n      const municipioId = (feature.properties as any).MPIO_CCNCT || `etiqueta-${index}`;\r\n      const municipioName = (feature.properties as any).MPIO_CNMBR || '';\r\n      text.setAttribute('data-element-id', municipioId);\r\n      text.setAttribute('name', municipioName);\r\n      text.setAttribute('x', String(centroid[0]));\r\n      text.setAttribute('y', String(centroid[1]));\r\n      text.textContent = municipioName;\r\n      etiquetasGroup.appendChild(text);\r\n    });\r\n\r\n    svg.appendChild(etiquetasGroup);\r\n  }\r\n\r\n  private addPuntosToTempSVG(svg: SVGSVGElement, features: GeoJSONFeature[]): void {\r\n    const puntosGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\r\n    puntosGroup.setAttribute('class', 'puntos');\r\n\r\n    features.forEach((feature, index) => {\r\n      const centroid = this.path.centroid(feature as any);\r\n      const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\r\n      circle.setAttribute('class', 'punto');\r\n      const municipioId = (feature.properties as any).MPIO_CCNCT || `punto-${index}`;\r\n      const municipioName = (feature.properties as any).MPIO_CNMBR || '';\r\n      circle.setAttribute('data-element-id', municipioId);\r\n      circle.setAttribute('name', municipioName);\r\n      circle.setAttribute('cx', String(centroid[0]));\r\n      circle.setAttribute('cy', String(centroid[1]));\r\n      circle.setAttribute('r', '3');\r\n      puntosGroup.appendChild(circle);\r\n    });\r\n\r\n    svg.appendChild(puntosGroup);\r\n  }\r\n\r\n  async downloadAllDepartments(): Promise<void> {\r\n    const zip = new JSZip();\r\n    \r\n    for (const dept of CONFIG.departmentCodes) {\r\n      const svgContent = this.generateSVGForDepartment(dept.code);\r\n      if (svgContent) {\r\n        zip.file(`${dept.name}.svg`, svgContent);\r\n      }\r\n    }\r\n\r\n    const blob = await zip.generateAsync({ \r\n      type: 'blob',\r\n      compression: 'DEFLATE',\r\n      compressionOptions: { level: 6 }\r\n    });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'departamentos-colombia.zip';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n\r\n    showNotification('ZIP descargado exitosamente');\r\n  }\r\n\r\n  downloadSingleDepartment(departmentCode: string, departmentName: string): void {\r\n    const svgContent = this.generateSVGForDepartment(departmentCode);\r\n    \r\n    if (!svgContent) {\r\n      showNotification('Error al generar SVG', 'error');\r\n      return;\r\n    }\r\n\r\n    const blob = new Blob([svgContent], { type: 'image/svg+xml' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${departmentName}.svg`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n\r\n    showNotification('SVG descargado exitosamente');\r\n  }\r\n\r\n  downloadCurrentSVG(svgCode: string, departmentName: string): void {\r\n    if (!svgCode) {\r\n      showNotification('Error: No hay código SVG para descargar', 'error');\r\n      return;\r\n    }\r\n\r\n    const blob = new Blob([svgCode], { type: 'image/svg+xml' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${departmentName}.svg`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n\r\n    showNotification('SVG descargado exitosamente');\r\n  }\r\n}\r\n","import * as d3 from 'd3';\r\nimport type { MapRenderer } from './map-renderer';\r\nimport { STATE } from './config';\r\nimport { formatXML, calculateSVGSize } from './utils';\r\n\r\nexport class CodeViewer {\r\n  private codeDisplay: HTMLElement;\r\n  private jsonDisplay: HTMLElement | null;\r\n  private jsonAllDisplay: HTMLElement | null;\r\n  private mapRenderer: MapRenderer;\r\n\r\n  constructor(codeDisplayId: string, mapRenderer: MapRenderer) {\r\n    const element = document.getElementById(codeDisplayId);\r\n    if (!element) throw new Error(`Element with id ${codeDisplayId} not found`);\r\n    \r\n    this.codeDisplay = element;\r\n    this.jsonDisplay = document.getElementById('json-display');\r\n    this.jsonAllDisplay = document.getElementById('json-all-display');\r\n    this.mapRenderer = mapRenderer;\r\n  }\r\n\r\n  updateSVGCode(): void {\r\n    const svgElement = this.mapRenderer.getSVGElement();\r\n    if (!svgElement) return;\r\n\r\n    const clonedSvg = svgElement.cloneNode(true) as SVGSVGElement;\r\n    \r\n    if (STATE.displayOption === 'map') {\r\n      clonedSvg.querySelectorAll('.etiquetas, .puntos').forEach(el => el.remove());\r\n    } else if (STATE.displayOption === 'map+labels') {\r\n      clonedSvg.querySelectorAll('.puntos').forEach(el => el.remove());\r\n    } else if (STATE.displayOption === 'map+points') {\r\n      clonedSvg.querySelectorAll('.etiquetas').forEach(el => el.remove());\r\n      clonedSvg.querySelectorAll('.punto').forEach(el => {\r\n        (el as SVGElement).style.opacity = '0';\r\n      });\r\n    }\r\n\r\n    const serializer = new XMLSerializer();\r\n    const svgString = serializer.serializeToString(clonedSvg);\r\n    \r\n    this.renderCode(svgString);\r\n    this.updateSizeInfo(svgString);\r\n  }\r\n\r\n  private renderCode(svgString: string): void {\r\n    const formatted = formatXML(svgString);\r\n\r\n    this.codeDisplay.innerHTML = '';\r\n\r\n    const lines = formatted.split('\\n');\r\n    lines.forEach((line, index) => {\r\n      const lineDiv = document.createElement('div');\r\n      lineDiv.className = 'code-line';\r\n      \r\n      const lineNumberSpan = document.createElement('span');\r\n      lineNumberSpan.className = 'line-number';\r\n      lineNumberSpan.textContent = String(index + 1);\r\n      \r\n      const lineContentSpan = document.createElement('span');\r\n      lineContentSpan.className = 'line-content';\r\n      lineContentSpan.textContent = line;\r\n      \r\n      const classMatch = line.match(/class=\"(municipio|etiqueta|punto)\"/);\r\n      const idMatch = line.match(/data-element-id=\"([^\"]+)\"/);\r\n      \r\n      if (classMatch && idMatch) {\r\n        lineDiv.classList.add('code-hoverable');\r\n        lineDiv.dataset.elementType = classMatch[1];\r\n        lineDiv.dataset.elementId = idMatch[1];\r\n      }\r\n      \r\n      lineDiv.appendChild(lineNumberSpan);\r\n      lineDiv.appendChild(lineContentSpan);\r\n      this.codeDisplay.appendChild(lineDiv);\r\n    });\r\n\r\n    this.setupCodeHoverEvents();\r\n  }\r\n\r\n  private setupCodeHoverEvents(): void {\r\n    const hoverableLines = this.codeDisplay.querySelectorAll('.code-hoverable');\r\n    \r\n    hoverableLines.forEach(line => {\r\n      line.addEventListener('mouseenter', (e) => {\r\n        const target = e.currentTarget as HTMLElement;\r\n        const elementId = target.dataset.elementId;\r\n        \r\n        if (elementId) {\r\n          this.highlightSVGElement(elementId);\r\n        }\r\n      });\r\n\r\n      line.addEventListener('mouseleave', (e) => {\r\n        const target = e.currentTarget as HTMLElement;\r\n        const elementId = target.dataset.elementId;\r\n        \r\n        if (elementId) {\r\n          this.unhighlightSVGElement(elementId);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private highlightSVGElement(elementId: string): void {\r\n    const svgElement = this.mapRenderer.getSVGElement();\r\n    const element = svgElement.querySelector(`[data-element-id=\"${elementId}\"]`);\r\n    \r\n    if (element) {\r\n      const svgEl = element as SVGElement;\r\n      const isText = element.tagName === 'text';\r\n      \r\n      if (isText) {\r\n        svgEl.style.fill = '#ff9800';\r\n        svgEl.style.fontWeight = 'bold';\r\n        svgEl.style.fontSize = '12px';\r\n      } else {\r\n        svgEl.style.stroke = '#ff9800';\r\n        svgEl.style.strokeWidth = '2';\r\n        if (element.tagName === 'path') {\r\n          svgEl.style.fill = '#ffa726';\r\n        }\r\n        svgEl.style.opacity = '1';\r\n      }\r\n    }\r\n  }\r\n\r\n  private unhighlightSVGElement(elementId: string): void {\r\n    const svgElement = this.mapRenderer.getSVGElement();\r\n    const element = svgElement.querySelector(`[data-element-id=\"${elementId}\"]`);\r\n    \r\n    if (element) {\r\n      const svgEl = element as SVGElement;\r\n      const isText = element.tagName === 'text';\r\n      const isMunicipio = svgEl.classList.contains('municipio');\r\n      const isPunto = svgEl.classList.contains('punto');\r\n      \r\n      if (isText) {\r\n        svgEl.style.fill = '#333';\r\n        svgEl.style.fontWeight = 'bold';\r\n        svgEl.style.fontSize = '10px';\r\n      } else {\r\n        svgEl.style.stroke = '#ffffff';\r\n        svgEl.style.strokeWidth = isMunicipio ? '0.5' : '1';\r\n        if (isMunicipio) {\r\n          svgEl.style.fill = '#6f9c76';\r\n        } else if (isPunto) {\r\n          svgEl.style.fill = '#d32f2f';\r\n        }\r\n        svgEl.style.opacity = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  copyCodeToClipboard(): void {\r\n    const codeText = Array.from(this.codeDisplay.querySelectorAll('.line-content'))\r\n      .map(el => el.textContent)\r\n      .join('\\n');\r\n\r\n    navigator.clipboard.writeText(codeText).then(() => {\r\n      const copyBtn = document.querySelector('.copy-code-btn');\r\n      if (copyBtn) {\r\n        copyBtn.innerHTML = '<i class=\"fa-solid fa-check\"></i> Copiado';\r\n        setTimeout(() => {\r\n          copyBtn.innerHTML = '<i class=\"fa-solid fa-copy\"></i> Copiar';\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  getCurrentSVGCode(): string {\r\n    return Array.from(this.codeDisplay.querySelectorAll('.line-content'))\r\n      .map(el => el.textContent)\r\n      .join('\\n');\r\n  }\r\n\r\n  updateJSONCode(): void {\r\n    // No generar JSON automáticamente, solo limpiar el estado\r\n    STATE.jsonGenerated.departamento = false;\r\n    STATE.jsonGenerated.all = false;\r\n    \r\n    // Mostrar placeholder en los displays JSON\r\n    if (this.jsonDisplay) {\r\n      this.jsonDisplay.innerHTML = '<div class=\"code-placeholder\"><i class=\"fa-solid fa-brackets-curly\"></i><p>Selecciona esta opción en el selector para generar el JSON</p></div>';\r\n    }\r\n    \r\n    if (this.jsonAllDisplay) {\r\n      this.jsonAllDisplay.innerHTML = '<div class=\"code-placeholder\"><i class=\"fa-solid fa-database\"></i><p>Selecciona \"Todos los departamentos\" y luego esta opción para generar el JSON</p></div>';\r\n    }\r\n  }\r\n\r\n  generateJSONOnDemand(type: 'departamento' | 'all', forceRegenerate: boolean = false): void {\r\n    if (type === 'departamento' && (!STATE.jsonGenerated.departamento || forceRegenerate)) {\r\n      this.showJSONLoading(this.jsonDisplay);\r\n      \r\n      // Usar setTimeout para permitir que se muestre el loading\r\n      setTimeout(() => {\r\n        const jsonString = this.mapRenderer.getMunicipiosJSON();\r\n        this.renderJSON(jsonString, this.jsonDisplay);\r\n        STATE.jsonGenerated.departamento = true;\r\n        \r\n        // Disparar evento personalizado para notificar que el JSON se generó\r\n        window.dispatchEvent(new CustomEvent('jsonGenerated', { detail: { type: 'departamento' } }));\r\n      }, 100);\r\n    } else if (type === 'all' && (!STATE.jsonGenerated.all || forceRegenerate)) {\r\n      this.showJSONLoading(this.jsonAllDisplay);\r\n      \r\n      // Usar setTimeout para permitir que se muestre el loading\r\n      setTimeout(() => {\r\n        this.updateAllDepartmentsJSON();\r\n        STATE.jsonGenerated.all = true;\r\n        \r\n        // Disparar evento personalizado para notificar que el JSON se generó\r\n        window.dispatchEvent(new CustomEvent('jsonGenerated', { detail: { type: 'all' } }));\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  private showJSONLoading(displayElement: HTMLElement | null): void {\r\n    if (!displayElement) return;\r\n    \r\n    displayElement.innerHTML = `\r\n      <div class=\"code-placeholder\">\r\n        <i class=\"fa-solid fa-spinner fa-spin\"></i>\r\n        <p>Generando JSON...</p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private updateAllDepartmentsJSON(): void {\r\n    if (!STATE.allData.departamentos) return;\r\n    \r\n    const departamentosData: any[] = [];\r\n    const departamentosMap = new Map<string, any>();\r\n    \r\n    // Primero, recopilar todos los departamentos únicos\r\n    STATE.allData.departamentos.features.forEach((feature: any) => {\r\n      const deptCode = feature.properties.DPTO_CCDGO;\r\n      const deptNombre = feature.properties.DPTO_CNMBR;\r\n      if (!departamentosMap.has(deptCode)) {\r\n        departamentosMap.set(deptCode, { code: deptCode, nombre: deptNombre });\r\n      }\r\n    });\r\n    \r\n    // Para cada departamento, crear un SVG temporal para obtener los paths\r\n    departamentosMap.forEach((deptInfo, deptCode) => {\r\n      const features = STATE.allData.departamentos!.features.filter(\r\n        (f: any) => f.properties.DPTO_CCDGO === deptCode\r\n      );\r\n      \r\n      // Crear proyección y path temporal\r\n      const tempProjection = d3.geoMercator();\r\n      const tempPath = d3.geoPath().projection(tempProjection);\r\n      \r\n      const featureCollection = {\r\n        type: 'FeatureCollection',\r\n        features: features\r\n      };\r\n      \r\n      tempProjection.fitSize([800, 600], featureCollection as any);\r\n      \r\n      const municipios: any[] = [];\r\n      \r\n      features.forEach((feature: any) => {\r\n        const pathData = tempPath(feature as any) || '';\r\n        \r\n        municipios.push({\r\n          id: feature.properties.MPIO_CCNCT || '',\r\n          nombre: feature.properties.MPIO_CNMBR || '',\r\n          d: pathData\r\n        });\r\n      });\r\n      \r\n      // Agregar departamento con su metadata y municipios\r\n      departamentosData.push({\r\n        metadata: {\r\n          departamento: {\r\n            id: deptCode,\r\n            nombre: deptInfo.nombre\r\n          },\r\n          svg: {\r\n            viewBox: '0 0 800 600'\r\n          },\r\n          styles: {\r\n            fill: '#6f9c76',\r\n            stroke: '#ffffff',\r\n            strokeWidth: 0.5\r\n          }\r\n        },\r\n        municipios\r\n      });\r\n    });\r\n    \r\n    const jsonAllString = JSON.stringify({ \r\n      totalDepartamentos: departamentosMap.size,\r\n      departamentos: departamentosData \r\n    }, null, 2);\r\n    \r\n    this.renderJSON(jsonAllString, this.jsonAllDisplay);\r\n  }\r\n\r\n  private renderJSON(jsonString: string, displayElement: HTMLElement | null): void {\r\n    if (!displayElement) return;\r\n    \r\n    displayElement.innerHTML = '';\r\n    \r\n    const lines = jsonString.split('\\n');\r\n    lines.forEach((line, index) => {\r\n      const lineDiv = document.createElement('div');\r\n      lineDiv.className = 'code-line';\r\n      \r\n      const lineNumberSpan = document.createElement('span');\r\n      lineNumberSpan.className = 'line-number';\r\n      lineNumberSpan.textContent = String(index + 1);\r\n      \r\n      const lineContentSpan = document.createElement('span');\r\n      lineContentSpan.className = 'line-content';\r\n      lineContentSpan.textContent = line;\r\n      \r\n      lineDiv.appendChild(lineNumberSpan);\r\n      lineDiv.appendChild(lineContentSpan);\r\n      displayElement.appendChild(lineDiv);\r\n    });\r\n  }\r\n\r\n  getCurrentJSONCode(): string {\r\n    if (!this.jsonDisplay) return '';\r\n    return Array.from(this.jsonDisplay.querySelectorAll('.line-content'))\r\n      .map(el => el.textContent)\r\n      .join('\\n');\r\n  }\r\n\r\n  getCurrentAllJSONCode(): string {\r\n    if (!this.jsonAllDisplay) return '';\r\n    return Array.from(this.jsonAllDisplay.querySelectorAll('.line-content'))\r\n      .map(el => el.textContent)\r\n      .join('\\n');\r\n  }\r\n\r\n  copyJSONToClipboard(): void {\r\n    const jsonText = this.getCurrentJSONCode();\r\n\r\n    navigator.clipboard.writeText(jsonText).then(() => {\r\n      const copyBtn = document.getElementById('btn-copiar-json');\r\n      if (copyBtn) {\r\n        copyBtn.innerHTML = '<i class=\"fa-solid fa-check\"></i> Copiado';\r\n        setTimeout(() => {\r\n          copyBtn.innerHTML = '<i class=\"fa-solid fa-copy\"></i> Copiar';\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  copyAllJSONToClipboard(): void {\r\n    const jsonText = this.getCurrentAllJSONCode();\r\n\r\n    navigator.clipboard.writeText(jsonText).then(() => {\r\n      const copyBtn = document.getElementById('btn-copiar-json-all');\r\n      if (copyBtn) {\r\n        copyBtn.innerHTML = '<i class=\"fa-solid fa-check\"></i> Copiado';\r\n        setTimeout(() => {\r\n          copyBtn.innerHTML = '<i class=\"fa-solid fa-copy\"></i> Copiar';\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateSizeInfo(svgString: string): void {\r\n    const sizeDisplay = document.querySelector('.svg-size-info');\r\n    \r\n    if (sizeDisplay) {\r\n      const sizeText = calculateSVGSize(svgString);\r\n      sizeDisplay.innerHTML = `<span class=\"size-value\">${sizeText}</span>`;\r\n    }\r\n  }\r\n\r\n  clearCode(): void {\r\n    this.codeDisplay.innerHTML = '<div class=\"code-placeholder\"><i class=\"fa-solid fa-code\"></i><p>Selecciona un departamento para ver el código SVG</p></div>';\r\n    \r\n    const sizeDisplay = document.querySelector('.svg-size-info');\r\n    if (sizeDisplay) {\r\n      sizeDisplay.innerHTML = `\r\n        <span class=\"size-placeholder\">\r\n          <i class=\"fa-solid fa-circle-info\"></i>\r\n          Sin selección\r\n        </span>\r\n      `;\r\n    }\r\n\r\n    // Limpiar JSON displays\r\n    if (this.jsonDisplay) {\r\n      this.jsonDisplay.innerHTML = '<div class=\"code-placeholder\"><i class=\"fa-solid fa-brackets-curly\"></i><p>Selecciona un departamento para ver los datos JSON</p></div>';\r\n    }\r\n    \r\n    if (this.jsonAllDisplay) {\r\n      this.jsonAllDisplay.innerHTML = '<div class=\"code-placeholder\"><i class=\"fa-solid fa-database\"></i><p>Selecciona \"Todos los departamentos\" para ver los datos JSON completos</p></div>';\r\n    }\r\n  }\r\n}\r\n\r\n","import './style.css';\nimport { MapRenderer } from './map-renderer';\nimport { SVGExporter } from './svg-exporter';\nimport { CodeViewer } from './code-viewer';\nimport { CONFIG, STATE } from './config';\nimport { showLoading, showNotification, calculateSVGSize } from './utils';\nimport type { GeoJSONCollection, DisplayOption } from './types';\n\nclass App {\n  private mapRenderer!: MapRenderer;\n  private svgExporter!: SVGExporter;\n  private codeViewer!: CodeViewer;\n\n  async init(): Promise<void> {\n    this.setupUI();\n    await this.loadData();\n    this.setupEventListeners();\n    this.loadFromURL(); // Cargar departamento desde URL\n  }\n\n  private setupUI(): void {\n    document.querySelector<HTMLDivElement>('#app')!.innerHTML = `\n      <div class=\"container\">\n        <header role=\"banner\">\n          <div class=\"header-content\">\n            <h1><i class=\"fa-solid fa-map-location-dot\"></i> Departamentos de Colombia</h1>\n            <p>Departamentos de Colombia en SVG vectoriales</p>\n          </div>\n        </header>\n\n        <main role=\"main\">          \n          <div class=\"controls\" id=\"controls\">\n            <div class=\"controls-grid\">\n              <!-- Selector de Departamento y Acciones -->\n              <div class=\"control-section\">\n                <div class=\"control-group\">\n                  <label for=\"departamento\" class=\"control-label\">\n                    <span class=\"label-icon\"><i class=\"fa-solid fa-map-location-dot\"></i></span>\n                    <span>Departamento</span>\n                    <span class=\"label-info\" aria-label=\"Más información\"><i class=\"fa-solid fa-circle-info\"></i></span>\n                    <span id=\"departamento-help\" class=\"help-text\" role=\"tooltip\">\n                      Selecciona un departamento para visualizar y descargar su mapa\n                    </span>\n                  </label>\n                  <div class=\"select-wrapper\">\n                    <select \n                      id=\"departamento\" \n                      aria-label=\"Seleccionar departamento\"\n                      aria-describedby=\"departamento-help\"\n                    >\n                      <option value=\"\">Selecciona un departamento</option>\n                      <option value=\"ALL\"><i class=\"fa-solid fa-box-archive\"></i> Todos los departamentos (ZIP)</option>\n                      ${CONFIG.departmentCodes.map(dept => \n                        `<option value=\"${dept.code}\">${dept.name}</option>`\n                      ).join('')}\n                    </select>\n                    <span class=\"select-arrow\" aria-hidden=\"true\">\n                      <svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\">\n                        <path d=\"M1 1L6 6L11 1\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n                      </svg>\n                    </span>\n                  </div>\n                </div>\n\n                <!-- Acciones debajo del selector -->\n                <div class=\"control-actions\">\n                  <div class=\"button-group\">\n                    <button \n                      id=\"btn-descargar\" \n                      class=\"btn btn-primary\"\n                      disabled \n                      aria-label=\"Descargar SVG del departamento seleccionado\"\n                      data-tooltip=\"Descarga el archivo SVG del departamento seleccionado\"\n                    >\n                      <span class=\"btn-icon\"><i class=\"fa-solid fa-download\"></i></span>\n                      <span class=\"btn-text\">Descargar SVG</span>\n                    </button>\n                    <button \n                      id=\"btn-copiar\" \n                      class=\"btn btn-secondary\"\n                      disabled\n                      aria-label=\"Copiar código SVG al portapapeles\"\n                      data-tooltip=\"Copia el código SVG al portapapeles\"\n                    >\n                      <span class=\"btn-icon\"><i class=\"fa-solid fa-copy\"></i></span>\n                      <span class=\"btn-text\">Copiar SVG</span>\n                    </button>\n                    <button \n                      id=\"btn-descargar-todos\" \n                      class=\"btn btn-accent\"\n                      style=\"display: none;\"\n                      aria-label=\"Descargar archivo ZIP con todos los 32 departamentos\"\n                      data-tooltip=\"Descarga un ZIP con los 32 departamentos\"\n                    >\n                      <span class=\"btn-icon\"><i class=\"fa-solid fa-file-zipper\"></i></span>\n                      <span class=\"btn-text\">Descargar ZIP</span>\n                      <span class=\"btn-badge\">32 dptos y el distrito capital</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Opciones de Visualización -->\n              <div class=\"control-section\">\n                <div class=\"control-group\">\n                  <label id=\"display-options-label\" class=\"control-label\">\n                    <span class=\"label-icon\"><i class=\"fa-solid fa-eye\"></i></span>\n                    <span>Visualización</span>\n                  </label>\n                  <div class=\"radio-group\" role=\"radiogroup\" aria-labelledby=\"display-options-label\">\n                    <label class=\"radio-card\">\n                      <input \n                        type=\"radio\" \n                        name=\"displayOption\" \n                        value=\"map\" \n                        checked\n                        aria-label=\"Mostrar solo el mapa sin etiquetas\"\n                      >\n                      <span class=\"radio-content\">\n                        <span class=\"radio-icon\">🗾</span>\n                        <span class=\"radio-text\">\n                          <strong>Solo mapa</strong>\n                          <small>Sin etiquetas</small>\n                        </span>\n                      </span>\n                    </label>\n                    <label class=\"radio-card\">\n                      <input \n                        type=\"radio\" \n                        name=\"displayOption\" \n                        value=\"map+labels\"\n                        aria-label=\"Mostrar mapa con nombres de municipios\"\n                      >\n                      <span class=\"radio-content\">\n                        <span class=\"radio-icon\">🏷️</span>\n                        <span class=\"radio-text\">\n                          <strong>Con etiquetas</strong>\n                          <small>Nombres de municipios</small>\n                        </span>\n                      </span>\n                    </label>\n                    <label class=\"radio-card\">\n                      <input \n                        type=\"radio\" \n                        name=\"displayOption\" \n                        value=\"map+points\"\n                        aria-label=\"Mostrar mapa con puntos de referencia\"\n                      >\n                      <span class=\"radio-content\">\n                        <span class=\"radio-icon\">📍</span>\n                        <span class=\"radio-text\">\n                          <strong>Con puntos</strong>\n                          <small>Puntos de referencia</small>\n                        </span>\n                      </span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div id=\"loading\" style=\"display: none;\" role=\"status\" aria-live=\"polite\">\n            <p>Cargando datos...</p>\n          </div>\n\n          <div class=\"content-wrapper\">\n            <div class=\"map-section\" role=\"region\" aria-label=\"Visualización del mapa\">\n              <div class=\"map-controls\">\n                <button \n                  id=\"zoom-in\" \n                  class=\"map-control-btn\" \n                  title=\"Acercar zoom\"\n                  aria-label=\"Acercar zoom\"\n                >\n                  <i class=\"fa-solid fa-plus\"></i>\n                </button>\n                <button \n                  id=\"zoom-out\" \n                  class=\"map-control-btn\" \n                  title=\"Alejar zoom\"\n                  aria-label=\"Alejar zoom\"\n                >\n                  <i class=\"fa-solid fa-minus\"></i>\n                </button>\n                <button \n                  id=\"zoom-reset\" \n                  class=\"map-control-btn\" \n                  title=\"Restablecer vista\"\n                  aria-label=\"Restablecer vista\"\n                >\n                  <i class=\"fa-solid fa-maximize\"></i>\n                </button>\n              </div>\n              <div id=\"mapa-container\" aria-live=\"polite\">\n                <div class=\"map-placeholder\">\n                  <i class=\"fa-solid fa-map\"></i>\n                  <p>Selecciona un departamento para visualizar el mapa</p>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"code-section\" role=\"region\" aria-label=\"Código fuente SVG\">\n              <div class=\"code-header\">\n                <div class=\"code-header-left\">\n                  <div class=\"code-type-selector\">\n                    <select id=\"code-type-select\" aria-label=\"Tipo de código\">\n                      <option value=\"svg\">Código SVG</option>\n                      <option value=\"json\">JSON Municipios</option>\n                      <option value=\"json-all\" style=\"display: none;\">JSON Departamentos</option>\n                    </select>\n                  </div>\n                  <span class=\"svg-size-info\" role=\"status\" aria-live=\"polite\">\n                    <span class=\"size-placeholder\">\n                      <i class=\"fa-solid fa-circle-info\"></i>\n                      Sin selección\n                    </span>\n                  </span>\n                </div>\n                <div class=\"code-header-actions\">\n                  <button \n                    id=\"btn-descargar-code\" \n                    class=\"download-code-btn\" \n                    title=\"Descargar archivo\"\n                    aria-label=\"Descargar archivo\"\n                    disabled\n                  >\n                    <i class=\"fa-solid fa-download\"></i> Descargar\n                  </button>\n                  <button \n                    class=\"copy-code-btn\" \n                    title=\"Copiar código al portapapeles\"\n                    aria-label=\"Copiar código al portapapeles\"\n                  >\n                    <i class=\"fa-solid fa-copy\"></i> Copiar\n                  </button>\n                </div>\n              </div>\n              <div \n                id=\"code-display\" \n                class=\"code-display\" \n                role=\"code\"\n                aria-label=\"Código formateado\"\n                tabindex=\"0\"\n              >\n                <div class=\"code-placeholder\">\n                  <i class=\"fa-solid fa-code\"></i>\n                  <p>Selecciona un departamento para ver el código SVG</p>\n                </div>\n              </div>\n              <div \n                id=\"json-display\" \n                class=\"code-display\" \n                role=\"code\"\n                aria-label=\"JSON formateado\"\n                tabindex=\"0\"\n                style=\"display: none;\"\n              >\n                <div class=\"code-placeholder\">\n                  <i class=\"fa-solid fa-brackets-curly\"></i>\n                  <p>Selecciona un departamento para ver los datos JSON</p>\n                </div>\n              </div>\n              <div \n                id=\"json-all-display\" \n                class=\"code-display\" \n                role=\"code\"\n                aria-label=\"JSON formateado de todos los departamentos\"\n                tabindex=\"0\"\n                style=\"display: none;\"\n              >\n                <div class=\"code-placeholder\">\n                  <i class=\"fa-solid fa-database\"></i>\n                  <p>Selecciona 'Todos los departamentos' para ver los datos JSON completos</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </main>\n\n        <footer role=\"contentinfo\">\n          <p>💡 Los mapas se generan en formato SVG vectorial escalable</p>\n          <p class=\"data-source\">\n            Datos: <a href=\"https://geoportal.dane.gov.co/\" target=\"_blank\" rel=\"noopener\">DANE Colombia 2018</a> • \n            Procesado por <a href=\"https://github.com/caticoa3/colombia_mapa\" target=\"_blank\" rel=\"noopener\">caticoa3/colombia_mapa</a>\n          </p>\n          <p class=\"developer-credit\">\n            Desarrollado por <a href=\"https://github.com/Hrevueltas\" target=\"_blank\" rel=\"noopener\">Hrevueltas</a>\n          </p>\n        </footer>\n      </div>\n    `;\n\n    this.mapRenderer = new MapRenderer('mapa-container');\n    this.svgExporter = new SVGExporter();\n    this.codeViewer = new CodeViewer('code-display', this.mapRenderer);\n  }\n\n  private async loadData(): Promise<void> {\n    showLoading(true);\n\n    try {\n      const data = await fetch(CONFIG.dataUrl).then(res => res.json());\n      \n      STATE.allData.departamentos = data as GeoJSONCollection;\n      STATE.allData.municipios = data as GeoJSONCollection;\n\n      showNotification('Datos cargados exitosamente');\n    } catch (error) {\n      console.error('Error loading data:', error);\n      showNotification('Error al cargar los datos', 'error');\n    } finally {\n      showLoading(false);\n    }\n  }\n\n  private setupEventListeners(): void {\n    const deptSelect = document.getElementById('departamento') as HTMLSelectElement;\n    deptSelect.addEventListener('change', () => {\n      this.handleDepartmentChange(deptSelect.value);\n      this.updateURL(deptSelect.value); // Actualizar URL cuando cambia selección\n    });\n\n    // Escuchar cambios en la URL (botón atrás/adelante del navegador)\n    window.addEventListener('hashchange', () => this.loadFromURL());\n\n    document.querySelectorAll('input[name=\"displayOption\"]').forEach(radio => {\n      radio.addEventListener('change', (e) => {\n        const option = (e.target as HTMLInputElement).value as DisplayOption;\n        this.mapRenderer.updateDisplayOption(option);\n        this.codeViewer.updateSVGCode();\n        this.codeViewer.updateJSONCode();\n      });\n    });\n\n    document.getElementById('btn-copiar')?.addEventListener('click', () => {\n      const svgElement = this.mapRenderer.getSVGElement();\n      if (svgElement) {\n        const svgContent = this.svgExporter.prepareSVGForExport(\n          svgElement,\n          STATE.displayOption === 'map+labels',\n          STATE.displayOption === 'map+points'\n        );\n        navigator.clipboard.writeText(svgContent).then(() => {\n          showNotification('SVG copiado al portapapeles');\n        });\n      }\n    });\n\n    document.getElementById('btn-descargar-todos')?.addEventListener('click', () => {\n      this.svgExporter.downloadAllDepartments();\n    });\n\n    document.getElementById('btn-descargar')?.addEventListener('click', () => {\n      const deptSelect = document.getElementById('departamento') as HTMLSelectElement;\n      const selectedDept = deptSelect.value;\n      const deptName = CONFIG.departmentCodes.find(d => d.code === selectedDept)?.name || '';\n      const currentSVGCode = this.codeViewer.getCurrentSVGCode();\n      this.svgExporter.downloadCurrentSVG(currentSVGCode, deptName);\n    });\n    \n    // Event listener para el selector de tipo de código\n    document.getElementById('code-type-select')?.addEventListener('change', (e) => {\n      const selectedType = (e.target as HTMLSelectElement).value;\n      \n      // Generar JSON bajo demanda\n      if (selectedType === 'json') {\n        this.codeViewer.generateJSONOnDemand('departamento');\n      } else if (selectedType === 'json-all') {\n        this.codeViewer.generateJSONOnDemand('all');\n      }\n      \n      this.switchCodeDisplay(selectedType);\n    });\n\n    // Event listeners para copiar y descargar (ahora manejan SVG o JSON según la selección)\n    document.querySelector('.copy-code-btn')?.addEventListener('click', () => {\n      const codeType = (document.getElementById('code-type-select') as HTMLSelectElement)?.value;\n      if (codeType === 'svg') {\n        this.codeViewer.copyCodeToClipboard();\n      } else if (codeType === 'json') {\n        this.codeViewer.copyJSONToClipboard();\n      } else if (codeType === 'json-all') {\n        this.codeViewer.copyAllJSONToClipboard();\n      }\n    });\n\n    document.getElementById('btn-descargar-code')?.addEventListener('click', () => {\n      const deptSelect = document.getElementById('departamento') as HTMLSelectElement;\n      const selectedDept = deptSelect.value;\n      const deptName = CONFIG.departmentCodes.find(d => d.code === selectedDept)?.name || '';\n      const codeType = (document.getElementById('code-type-select') as HTMLSelectElement)?.value;\n      \n      if (codeType === 'svg') {\n        const currentSVGCode = this.codeViewer.getCurrentSVGCode();\n        this.svgExporter.downloadCurrentSVG(currentSVGCode, deptName);\n      } else if (codeType === 'json') {\n        const jsonCode = this.codeViewer.getCurrentJSONCode();\n        this.downloadJSON(jsonCode, `${deptName}-municipios.json`);\n      } else if (codeType === 'json-all') {\n        const jsonCode = this.codeViewer.getCurrentAllJSONCode();\n        this.downloadJSON(jsonCode, 'colombia-todos-municipios.json');\n      }\n    });\n    \n    document.getElementById('zoom-in')?.addEventListener('click', () => {\n      this.mapRenderer.zoomIn();\n    });\n    \n    document.getElementById('zoom-out')?.addEventListener('click', () => {\n      this.mapRenderer.zoomOut();\n    });\n    \n    document.getElementById('zoom-reset')?.addEventListener('click', () => {\n      this.mapRenderer.resetZoom();\n    });\n    \n    // Escuchar cuando se genera JSON para actualizar la UI\n    window.addEventListener('jsonGenerated', () => {\n      // const customEvent = e as CustomEvent;\n      const codeTypeSelect = document.getElementById('code-type-select') as HTMLSelectElement;\n      if (codeTypeSelect) {\n        this.updateSizeInfoForCurrentDisplay(codeTypeSelect.value);\n      }\n    });\n  }\n\n  private handleDepartmentChange(value: string): void {\n    const mapPlaceholder = document.querySelector('#mapa-container .map-placeholder') as HTMLElement;\n    \n    if (!value) {\n      this.disableButtons();\n      this.codeViewer.clearCode();\n      this.mapRenderer.clearMap();\n      this.hideJsonAllOption();\n      if (mapPlaceholder) {\n        mapPlaceholder.style.display = 'flex';\n        mapPlaceholder.innerHTML = `\n          <i class=\"fa-solid fa-map\"></i>\n          <p>Selecciona un departamento para visualizar el mapa</p>\n        `;\n      }\n      return;\n    }\n\n    if (value === 'ALL') {\n      STATE.isAllDepartments = true;\n      this.showDownloadAllButton();\n      this.showJsonAllOption();\n      this.codeViewer.clearCode();\n      this.codeViewer.updateJSONCode();\n      this.mapRenderer.clearMap();\n      \n      // Si el usuario tiene seleccionado JSON All, generar el JSON de todos\n      const codeTypeSelect = document.getElementById('code-type-select') as HTMLSelectElement;\n      if (codeTypeSelect && codeTypeSelect.value === 'json-all') {\n        this.codeViewer.generateJSONOnDemand('all');\n      }\n      \n      if (mapPlaceholder) {\n        mapPlaceholder.style.display = 'flex';\n        mapPlaceholder.innerHTML = `\n          <i class=\"fa-solid fa-layer-group\"></i>\n          <p>Opción \"Todos los departamentos\" seleccionada</p>\n          <p class=\"placeholder-hint\">Usa el botón \"Descargar Todos (ZIP)\" para obtener todos los mapas, o selecciona \"JSON Todos los Departamentos\" en el selector de código</p>\n        `;\n      }\n      return;\n    }\n\n    if (mapPlaceholder) {\n      mapPlaceholder.style.display = 'none';\n    }\n\n    STATE.isAllDepartments = false;\n    this.hideDownloadAllButton();\n    this.hideJsonAllOption();\n\n    if (!STATE.allData.departamentos) return;\n\n    const features = STATE.allData.departamentos.features.filter(\n      (f: any) => f.properties.DPTO_CCDGO === value\n    );\n\n    this.mapRenderer.renderMapa(features);\n    this.mapRenderer.renderMunicipios(value);\n\n    if (STATE.displayOption === 'map+labels') {\n      this.mapRenderer.renderEtiquetas(features);\n    } else if (STATE.displayOption === 'map+points') {\n      this.mapRenderer.renderPuntos(features);\n    }\n\n    this.codeViewer.updateSVGCode();\n    this.codeViewer.updateJSONCode();\n    this.enableButtons();\n    \n    // Si el usuario tiene seleccionado JSON, generar el JSON del nuevo departamento\n    const codeTypeSelect = document.getElementById('code-type-select') as HTMLSelectElement;\n    if (codeTypeSelect && codeTypeSelect.value === 'json') {\n      // Forzar regeneración cuando cambiamos de departamento y estamos en vista JSON\n      this.codeViewer.generateJSONOnDemand('departamento', true);\n    } else if (codeTypeSelect && codeTypeSelect.value === 'json-all') {\n      // Forzar regeneración del JSON completo si estamos en esa vista\n      this.codeViewer.generateJSONOnDemand('all', true);\n    }\n  }\n\n  private enableButtons(): void {\n    (document.getElementById('btn-descargar') as HTMLButtonElement).disabled = false;\n    (document.getElementById('btn-copiar') as HTMLButtonElement).disabled = false;\n    (document.getElementById('btn-descargar-code') as HTMLButtonElement).disabled = false;\n    (document.getElementById('btn-descargar-json') as HTMLButtonElement | null)!.disabled = false;\n    (document.getElementById('btn-descargar-json-all') as HTMLButtonElement | null)!.disabled = false;\n  }\n\n  private disableButtons(): void {\n    (document.getElementById('btn-descargar') as HTMLButtonElement).disabled = true;\n    (document.getElementById('btn-copiar') as HTMLButtonElement).disabled = true;\n    (document.getElementById('btn-descargar-code') as HTMLButtonElement).disabled = true;\n    (document.getElementById('btn-descargar-json') as HTMLButtonElement | null)!.disabled = true;\n    (document.getElementById('btn-descargar-json-all') as HTMLButtonElement | null)!.disabled = true;\n  }\n\n  private showDownloadAllButton(): void {\n    document.getElementById('btn-descargar')!.style.display = 'none';\n    document.getElementById('btn-copiar')!.style.display = 'none';\n    document.getElementById('btn-descargar-todos')!.style.display = 'inline-block';\n  }\n\n  private hideDownloadAllButton(): void {\n    document.getElementById('btn-descargar')!.style.display = 'inline-block';\n    document.getElementById('btn-copiar')!.style.display = 'inline-block';\n    document.getElementById('btn-descargar-todos')!.style.display = 'none';\n  }\n\n  private showJsonAllOption(): void {\n    const jsonAllOption = document.querySelector('#code-type-select option[value=\"json-all\"]') as HTMLOptionElement;\n    if (jsonAllOption) {\n      jsonAllOption.style.display = 'block';\n    }\n  }\n\n  private hideJsonAllOption(): void {\n    const jsonAllOption = document.querySelector('#code-type-select option[value=\"json-all\"]') as HTMLOptionElement;\n    const codeTypeSelect = document.getElementById('code-type-select') as HTMLSelectElement;\n    \n    if (jsonAllOption) {\n      jsonAllOption.style.display = 'none';\n    }\n    \n    // Si estaba seleccionada, volver a SVG\n    if (codeTypeSelect && codeTypeSelect.value === 'json-all') {\n      codeTypeSelect.value = 'svg';\n      this.switchCodeDisplay('svg');\n    }\n  }\n\n  private updateURL(departmentCode: string): void {\n    if (!departmentCode || departmentCode === 'ALL') {\n      // Limpiar hash si no hay departamento o es \"todos\"\n      if (window.location.hash) {\n        history.pushState(null, '', window.location.pathname);\n      }\n      return;\n    }\n\n    const dept = CONFIG.departmentCodes.find(d => d.code === departmentCode);\n    if (dept) {\n      const slug = this.createSlug(dept.name);\n      history.pushState(null, '', `#${slug}`);\n    }\n  }\n\n  private loadFromURL(): void {\n    const hash = window.location.hash.slice(1); // Remover el #\n    if (!hash) return;\n\n    // Buscar departamento por slug\n    const dept = CONFIG.departmentCodes.find(d => \n      this.createSlug(d.name) === hash\n    );\n\n    if (dept) {\n      const select = document.getElementById('departamento') as HTMLSelectElement;\n      select.value = dept.code;\n      this.handleDepartmentChange(dept.code);\n    }\n  }\n\n  private createSlug(name: string): string {\n    return name\n      .toLowerCase()\n      .normalize('NFD') // Descomponer caracteres acentuados\n      .replace(/[\\u0300-\\u036f]/g, '') // Eliminar diacríticos\n      .replace(/\\s+/g, '-') // Espacios a guiones\n      .replace(/[^a-z0-9-]/g, '') // Solo letras, números y guiones\n      .replace(/-+/g, '-'); // Múltiples guiones a uno solo\n  }\n\n  private downloadJSON(jsonContent: string, filename: string): void {\n    if (!jsonContent) {\n      showNotification('Error: No hay datos JSON para descargar', 'error');\n      return;\n    }\n\n    const blob = new Blob([jsonContent], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.click();\n    URL.revokeObjectURL(url);\n\n    showNotification('JSON descargado exitosamente');\n  }\n\n  private switchCodeDisplay(codeType: string): void {\n    const codeDisplay = document.getElementById('code-display');\n    const jsonDisplay = document.getElementById('json-display');\n    const jsonAllDisplay = document.getElementById('json-all-display');\n\n    // Ocultar todos los displays\n    if (codeDisplay) codeDisplay.style.display = 'none';\n    if (jsonDisplay) jsonDisplay.style.display = 'none';\n    if (jsonAllDisplay) jsonAllDisplay.style.display = 'none';\n\n    // Mostrar el display correspondiente\n    if (codeType === 'svg') {\n      if (codeDisplay) codeDisplay.style.display = 'block';\n    } else if (codeType === 'json') {\n      if (jsonDisplay) jsonDisplay.style.display = 'block';\n    } else if (codeType === 'json-all') {\n      if (jsonAllDisplay) jsonAllDisplay.style.display = 'block';\n    }\n\n    // Actualizar el tamaño mostrado\n    this.updateSizeInfoForCurrentDisplay(codeType);\n  }\n\n  private updateSizeInfoForCurrentDisplay(codeType: string): void {\n    const sizeInfo = document.querySelector('.svg-size-info');\n    if (!sizeInfo) return;\n\n    let content = '';\n    if (codeType === 'svg') {\n      const codeDisplay = document.getElementById('code-display');\n      const hasContent = codeDisplay && !codeDisplay.querySelector('.code-placeholder');\n      if (hasContent) {\n        const svgCode = this.codeViewer.getCurrentSVGCode();\n        const sizeText = calculateSVGSize(svgCode);\n        content = `<span class=\"size-value\">${sizeText}</span>`;\n      } else {\n        content = `<span class=\"size-placeholder\"><i class=\"fa-solid fa-circle-info\"></i> Sin selección</span>`;\n      }\n    } else if (codeType === 'json') {\n      const jsonDisplay = document.getElementById('json-display');\n      const hasContent = jsonDisplay && !jsonDisplay.querySelector('.code-placeholder');\n      if (hasContent) {\n        const jsonCode = this.codeViewer.getCurrentJSONCode();\n        const sizeText = calculateSVGSize(jsonCode);\n        content = `<span class=\"size-value\">${sizeText}</span>`;\n      } else {\n        content = `<span class=\"size-placeholder\"><i class=\"fa-solid fa-circle-info\"></i> Sin selección</span>`;\n      }\n    } else if (codeType === 'json-all') {\n      const jsonAllDisplay = document.getElementById('json-all-display');\n      const hasContent = jsonAllDisplay && !jsonAllDisplay.querySelector('.code-placeholder');\n      if (hasContent) {\n        const jsonCode = this.codeViewer.getCurrentAllJSONCode();\n        const sizeText = calculateSVGSize(jsonCode);\n        content = `<span class=\"size-value\">${sizeText}</span>`;\n      } else {\n        content = `<span class=\"size-placeholder\"><i class=\"fa-solid fa-circle-info\"></i> Sin selección</span>`;\n      }\n    }\n\n    sizeInfo.innerHTML = content;\n  }\n}\n\nconst app = new App();\napp.init();\n"],"names":["CONFIG","STATE","formatXML","xml","formatted","indent","node","showLoading","show","loadingEl","escapeSelectorId","id","showNotification","message","type","notification","calculateSVGSize","svgString","bytes","kb","MapRenderer","containerId","d3.select","d3.geoMercator","d3.geoPath","d3.zoom","event","features","featureCollection","departmentId","d","i","d3.zoomIdentity","departmentCode","f","option","elementId","escapedId","svgElement","municipios","municipioElements","departamentoId","departamentoNombre","viewBox","commonFill","commonStroke","commonStrokeWidth","firstElement","element","pathElement","nombre","jsonData","SVGExporter","svg","includeLabels","includePoints","clonedSvg","el","bounds","tempSvg","mapGroup","feature","index","path","municipioId","municipioName","etiquetasGroup","centroid","text","puntosGroup","circle","zip","JSZip","dept","svgContent","blob","url","departmentName","a","svgCode","CodeViewer","codeDisplayId","mapRenderer","line","lineDiv","lineNumberSpan","lineContentSpan","classMatch","idMatch","e","svgEl","isText","isMunicipio","isPunto","codeText","copyBtn","forceRegenerate","jsonString","displayElement","departamentosData","departamentosMap","deptCode","deptNombre","deptInfo","tempProjection","tempPath","pathData","jsonAllString","jsonText","sizeDisplay","sizeText","App","data","res","error","deptSelect","radio","selectedDept","deptName","currentSVGCode","selectedType","codeType","jsonCode","codeTypeSelect","value","mapPlaceholder","jsonAllOption","slug","hash","select","name","jsonContent","filename","codeDisplay","jsonDisplay","jsonAllDisplay","sizeInfo","content","app"],"mappings":"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"}